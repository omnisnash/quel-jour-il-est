{"version":3,"sources":["components/github-corner/GithubCorner.tsx","components/tweet/Tweet.tsx","hooks/useTweetHook.tsx","App.tsx","index.tsx"],"names":["GithubCorner","props","className","href","url","width","height","viewBox","d","fill","Tweet","altText","useTweetHook","tweetList","content","getTweetForDay","dayIndex","tweets","days","length","Math","floor","random","App","today","Date","tweet","getISODay","format","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPA0BeA,EAlBmC,SAACC,GAAD,OAChD,mBAAGC,UAAU,eAAeC,KAAMF,EAAMG,IAAK,aAAW,wBAAxD,SACE,sBAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,cAAc,cAAY,OAA9D,UACE,sBAAMC,EAAE,sDACR,sBACEN,UAAU,WACVM,EAAE,2LACFC,KAAK,iBAEP,sBACEP,UAAU,YACVM,EAAE,shBACFC,KAAK,uBCHEC,EAVqB,SAACT,GACjC,OACI,4BAAYC,UAAU,gBAAgB,aAAW,SAAjD,SACI,mBAAGC,KAAMF,EAAMG,IAAK,WAAS,OAA7B,SACKH,EAAMU,a,OCwBRC,EAtBM,WACjB,IAAMC,EAAuBC,EAgB7B,MAAO,CACHC,eAfmB,SAACC,GACpB,GAAIA,EAAW,GAAKA,EAAW,EAC3B,OAAO,KAGX,IAAMC,EAA2BJ,EAAUK,KAAKF,GAEhD,OAAKC,GAA4B,IAAlBA,EAAOE,OAIfF,EAAOG,KAAKC,MAAMD,KAAKE,SAAWL,EAAOE,SAHrC,QCEJI,MArBf,WACE,IAAOR,EAAkBH,IAAlBG,eAEDS,EAAQ,IAAIC,KAEZC,EAAQX,EADGY,YAAUH,IAG3B,OACE,qCACGE,EACC,cAAC,EAAD,CAAOtB,IAAKsB,EAAMtB,IAAKO,QAAQ,qEAC/B,yEAGF,oBAAGT,UAAU,cAAb,4BAA0C,4BAAI0B,YAAOJ,EAAO,aAE5D,cAAC,EAAD,CAAcpB,IAAK,sDChBzByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7c3a8c41.chunk.js","sourcesContent":["// From: https://codepen.io/Jinksi/pen/QQbXmm\r\n\r\nimport './GithubCorner.css'\r\n\r\nexport interface GithubCornerProps {\r\n  url: string\r\n}\r\n\r\nconst GithubCorner: React.FC<GithubCornerProps> = (props) => (\r\n  <a className='GithubCorner' href={props.url} aria-label='View source on Github'>\r\n    <svg width='80' height='80' viewBox='0 0 250 250' aria-hidden='true'>\r\n      <path d='M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z' />\r\n      <path\r\n        className='octo-arm'\r\n        d='M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2'\r\n        fill='currentColor'\r\n      />\r\n      <path\r\n        className='octo-body'\r\n        d='M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z'\r\n        fill='currentColor'\r\n      />\r\n    </svg>\r\n  </a>\r\n)\r\n\r\nexport default GithubCorner;","import React from 'react';\r\n\r\nexport interface TweetProps {\r\n    url: string;\r\n    altText?: string;\r\n}\r\n\r\nconst Tweet: React.FC<TweetProps> = (props) => {\r\n    return (\r\n        <blockquote className=\"twitter-tweet\" data-align=\"center\">\r\n            <a href={props.url} data-dnt=\"true\">\r\n                {props.altText}\r\n            </a>\r\n        </blockquote>\r\n    );\r\n};\r\n\r\nexport default Tweet;","import content from './../content.json';\r\n\r\nexport interface TweetReference {\r\n    lang: string;\r\n    url: string;\r\n}\r\n\r\nexport interface TweetList {\r\n    days: {\r\n        [key: number]: TweetReference[];\r\n    }\r\n}\r\n\r\nconst useTweetHook = () => {\r\n    const tweetList: TweetList = content;\r\n\r\n    const getTweetForDay = (dayIndex: number): TweetReference | null => {\r\n        if (dayIndex < 0 || dayIndex > 7) {\r\n            return null;\r\n        }\r\n\r\n        const tweets: TweetReference[] = tweetList.days[dayIndex];\r\n\r\n        if (!tweets || tweets.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        return tweets[Math.floor(Math.random() * tweets.length)];\r\n    }\r\n\r\n    return {\r\n        getTweetForDay\r\n    }\r\n};\r\n\r\nexport default useTweetHook;","import { format, getISODay } from 'date-fns';\nimport GithubCorner from './components/github-corner/GithubCorner';\nimport Tweet from './components/tweet/Tweet';\nimport useTweetHook from './hooks/useTweetHook';\n\nfunction App() {\n  const {getTweetForDay} = useTweetHook();\n\n  const today = new Date();\n  const dayIndex = getISODay(today);\n  const tweet = getTweetForDay(dayIndex);\n\n  return (\n    <>\n      {tweet ?\n        <Tweet url={tweet.url} altText=\"Doesn't see the embeded tweet? Try disabling tracking protection\" /> :\n        <p>Oups, no tweet for this day ðŸ˜¶</p>\n      }\n\n      <p className=\"current-day\">Look like it's <b>{format(today, 'iiii')}</b></p>\n      \n      <GithubCorner url={\"https://github.com/omnisnash/quel-jour-il-est\"}/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}